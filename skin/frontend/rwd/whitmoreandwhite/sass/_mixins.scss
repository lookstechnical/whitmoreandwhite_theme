@mixin respond-to($media) {
  @if $media == mobile {
    @media only screen and (max-width: $break-small) { @content; }
  }
  @else if $media == tablet {
    @media only screen and (min-width: $break-small)  { @content; }
  }
  @else if $media == desktop {
    @media only screen and (min-width: $break-medium) { @content; }
  }
  @else  {
    @media only screen and (min-width: $media) { @content; }
  }
}




@mixin col($width,$padding) {
	width: $width;
	padding:$padding;
	position: relative;
	float:left;
}

@mixin center($width){
	width: 100%;
	margin: 0 auto;
	
	
	@include respond-to(mobile){
		padding:0px 10px;
	}
	@include respond-to(tablet){
		padding:0px 10px;
	}
	@include respond-to(desktop){
		padding:0px 10px;
	}
	@include respond-to($width){
		width:$width;
	}
}


 @mixin ribbon($color, $ribbon-thickness, $notch-color, $notch-side) {
      
    
      padding-#{$notch-side}: $ribbon-thickness;
      @if $notch-side == left {
        height: $ribbon-thickness;
        line-height: $ribbon-thickness;
        padding-right: 10px;
        text-align: right;
      } @else if $notch-side == right {
        height: $ribbon-thickness;
        line-height: $ribbon-thickness;
        padding-left: 10px;
      } @else if $notch-side == bottom {
        text-align: center;
        width: $ribbon-thickness;
        padding-top: 10px;
      } @else if $notch-side == left-right{
      	text-align: center;
        line-height: $ribbon-thickness;
        padding-left: 10px;
        position: relative;
        padding-right: 10px;
      }@else {
        text-align: center;
        width: $ribbon-thickness;
        padding-bottom: 10px;
      }
      
      @if($notch-side != left-right) {
	      &:before {
	        content: '';
	        display: block;
	        height: 0;
	        width: 0;
	        border-style: solid;
	        border-width: $ribbon-thickness/2 $ribbon-thickness/3;
	        border-color: transparent;
	        border-#{$notch-side}-color: $notch-color;
	        position: absolute;
	        #{$notch-side}: -1px;
	        background: $color;
	      }
      }
      
      @if($notch-side == left-right) {
	      &:after {
	        content: '';
	        display: block;
	        height: 0;
	        width: 0;
	        border-style: solid;
	        border-width: $ribbon-thickness/2  $ribbon-thickness/3;
	        border-color: transparent;
	        border-left-color: $notch-color;
	        position: absolute;
	        left: -1px;
	        top:0px;
	        background: $color;
	      }
	      
	      
	       &:before {
	        content: '';
	        display: block;
	        height: 0;
	        width: 0;
	        border-style: solid;
	        border-width: $ribbon-thickness/2  $ribbon-thickness/3;
	        border-color: transparent;
	        border-right-color: $notch-color;
	        position: absolute;
	        right: -1px;
	        background: $color;
	      }
	   }
    }
    
    
    
    // ----
// Sass (v3.4.7)
// Compass (v1.0.1)
// ----
 
$include-icon-grid-classes: true !default;
$icon-grid-class: 'grid-icon' !default;
$icon-grid-number: 4 !default;
$icon-grid-bg: green !default;
$icon-grid-hover-bg: blue !default;
$icon-grid-line-color: #fff !default;
$icon-grid-line-size: 1px !default;
$icon-grid-size: 23px !default;
$icon-grid-spacing: 5px !default;
$icon-line-ofsett:-1px !default;
 
@mixin icon-grid-base($bg, $size, $line-color, $line-size, $hover-bg, $spacing,$line-ofsett) {
  text-align: left;
  text-indent: -9999px;
  background: {
    color: $bg;
    image: 
      // Horizontal lines
      linear-gradient($line-color $line-size, transparent $line-size),
      // Verical lines
      linear-gradient(90deg, $line-color $line-size, transparent $line-size);
    position: $line-ofsett $line-ofsett;
  }
  display: inline-block;
  height: $size;
  margin: {
    left: $spacing;
    right: $spacing;
  }
  width: $size;
  &:hover { background-color: $hover-bg; }
  &:first-of-type { margin-left: 0; }
  &:last-of-type { margin-right: 0; }
}
@mixin icon-grid($num-of-lines, $size) {
  background-size: ceil($size/$num-of-lines) ceil($size/$num-of-lines);
}
 
@if $include-icon-grid-classes {
  
  .#{$icon-grid-class} {
    @include icon-grid-base(
      $icon-grid-bg, 
      $icon-grid-size, 
      $icon-grid-line-color, 
      $icon-grid-line-size, 
      $icon-grid-hover-bg,
      $icon-grid-spacing,
      $icon-line-ofsett
    );
  }
  
  @for $i from 2 through $icon-grid-number {
    .#{$icon-grid-class}-#{($i)} {
      @include icon-grid($i, $icon-grid-size);
    }
  }
  
}

